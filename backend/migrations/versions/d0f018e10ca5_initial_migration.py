"""Initial Migration

Revision ID: d0f018e10ca5
Revises: 
Create Date: 2021-12-02 01:47:45.490839

"""
import sqlalchemy_utils
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
from models.PowModel import STATUS
from models.UserModel import STATES

revision = 'd0f018e10ca5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('course',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course_profile', sa.String(length=150), nullable=False),
    sa.Column('number_of_credits', sa.Integer(), nullable=False),
    sa.Column('course_description', sa.Text(), nullable=True),
    sa.Column('course_number', sa.String(length=4), nullable=False),
    sa.Column('department', sa.String(length=3), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('grade',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('grade', sa.String(length=3), nullable=False),
    sa.Column('description', sa.String(length=80), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('specialization',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('specialization', sa.String(length=150), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('course_types', sqlalchemy_utils.types.json.JSONType(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('term',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('term_name', sa.String(length=80), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('term_start', sa.DateTime(), nullable=True),
    sa.Column('term_end', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=80), nullable=True),
    sa.Column('middle_name', sa.String(length=1), nullable=True),
    sa.Column('last_name', sa.String(length=80), nullable=True),
    sa.Column('access_id', sa.String(length=6), nullable=False),
    sa.Column('email', sqlalchemy_utils.types.email.EmailType(length=255), nullable=False),
    sa.Column('password', sa.String(length=80), nullable=False),
    sa.Column('address', sa.String(length=120), nullable=True),
    sa.Column('address2', sa.String(length=120), nullable=True),
    sa.Column('city', sa.String(length=80), nullable=True),
    sa.Column('state', sqlalchemy_utils.types.choice.ChoiceType(STATES), nullable=True),
    sa.Column('zip_code', sa.String(length=5), nullable=True),
    sa.Column('country', sa.String(length=80), nullable=True),
    sa.Column('telephone', sqlalchemy_utils.types.phone_number.PhoneNumberType(length=20), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('access_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('requirement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('parent_course_id', sa.Integer(), nullable=False),
    sa.Column('child_course_id', sa.Integer(), nullable=False),
    sa.Column('req_type', sa.String(length=80), nullable=False),
    sa.ForeignKeyConstraint(['child_course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['parent_course_id'], ['course.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('specialization_course',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('specialization_id', sa.Integer(), nullable=False),
    sa.Column('course_type', sa.String(length=150), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['specialization_id'], ['specialization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('term_course',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('term_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['term_id'], ['term.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('properties', sqlalchemy_utils.types.json.JSONType(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('POW',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('creation_date', sa.DateTime(), nullable=True),
    sa.Column('petition_date', sa.DateTime(), nullable=True),
    sa.Column('candidacy_approved_by_id', sa.Integer(), nullable=True),
    sa.Column('candidacy_approval_date', sa.DateTime(), nullable=True),
    sa.Column('graduation_approved_by_id', sa.Integer(), nullable=True),
    sa.Column('graduation_approval_date', sa.DateTime(), nullable=True),
    sa.Column('specialization_id', sa.Integer(), nullable=False),
    sa.Column('orientation_term_id', sa.Integer(), nullable=True),
    sa.Column('first_class_term_id', sa.Integer(), nullable=True),
    sa.Column('status', sqlalchemy_utils.types.choice.ChoiceType(STATUS), nullable=True),
    sa.Column('completion_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['candidacy_approved_by_id'], ['user_role.id'], ),
    sa.ForeignKeyConstraint(['first_class_term_id'], ['term.id'], ),
    sa.ForeignKeyConstraint(['graduation_approved_by_id'], ['user_role.id'], ),
    sa.ForeignKeyConstraint(['orientation_term_id'], ['term.id'], ),
    sa.ForeignKeyConstraint(['specialization_id'], ['specialization.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user_role.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('completed_course',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('term_course_id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('grade_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['grade_id'], ['grade.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user_role.id'], ),
    sa.ForeignKeyConstraint(['term_course_id'], ['term_course.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_adviser',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_id', sa.Integer(), nullable=False),
    sa.Column('adviser_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['adviser_id'], ['user_role.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user_role.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('message',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=False),
    sa.Column('pow_id', sa.Integer(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('send_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['pow_id'], ['POW.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student_pow_course',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('pow_id', sa.Integer(), nullable=False),
    sa.Column('term_id', sa.Integer(), nullable=True),
    sa.Column('course_type', sa.String(length=80), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['pow_id'], ['POW.id'], ),
    sa.ForeignKeyConstraint(['term_id'], ['term.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('student_pow_course')
    op.drop_table('message')
    op.drop_table('student_adviser')
    op.drop_table('completed_course')
    op.drop_table('POW')
    op.drop_table('user_role')
    op.drop_table('term_course')
    op.drop_table('specialization_course')
    op.drop_table('requirement')
    op.drop_table('user')
    op.drop_table('term')
    op.drop_table('specialization')
    op.drop_table('role')
    op.drop_table('grade')
    op.drop_table('course')
    # ### end Alembic commands ###
